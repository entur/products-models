export enum AccommodationFacility {
  SLEEPER = 'SLEEPER',
  SEATING = 'SEATING',
  DOUBLE_SLEEPER = 'DOUBLE_SLEEPER',
  SINGLE_SLEEPER = 'SINGLE_SLEEPER',
  SPECIAL_SLEEPER = 'SPECIAL_SLEEPER',
  COUCHETTE = 'COUCHETTE',
  SINGLE_COUCHETTE = 'SINGLE_COUCHETTE',
  DOUBLE_COUCHETTE = 'DOUBLE_COUCHETTE',
  RECLINING_SEAT = 'RECLINING_SEAT',
  BABY_COMPARTMENT = 'BABY_COMPARTMENT',
  FAMILY_COMPARTMENT = 'FAMILY_COMPARTMENT',
  PANORAMA_COACH = 'PANORAMA_COACH',
  PULLMAN_COACH = 'PULLMAN_COACH',
  STANDING = 'STANDING'
}

export enum NuisanceFacility {
  BREASTFEEDING_FRIENDLY = 'BREASTFEEDING_FRIENDLY',
  CHILD_FREE_AREA = 'CHILD_FREE_AREA',
  FAMILY_AREA = 'FAMILY_AREA',
  ANIMALS_ALLOWED = 'ANIMALS_ALLOWED',
  MOBILE_PHONE_USE_ZONE = 'MOBILE_PHONE_USE_ZONE',
  MOBILE_PHONE_FREE_ZONE = 'MOBILE_PHONE_FREE_ZONE',
  SMOKING = 'SMOKING',
  NO_SMOKING = 'NO_SMOKING'
}

export enum AmountOfPriceUnitProductType {
  TRIP_CARNET = 'TRIP_CARNET',
  PASS_CARNET = 'PASS_CARNET',
  UNIT_COUPONS = 'UNIT_COUPONS',
  STORED_VALUE = 'STORED_VALUE',
  OTHER = 'OTHER'
}

export enum Modification {
  NEW = 'NEW',
  REVISE = 'REVISE',
  DELETE = 'DELETE'
}

export enum VersionStatus {
  DRAFT = 'DRAFT',
  PROPOSED = 'PROPOSED',
  VERSIONED = 'VERSIONED',
  DEPRECATED = 'DEPRECATED'
}

export enum FareStructureType {
  CAPPED_FLAT_FARE = 'CAPPED_FLAT_FARE',
  CAPPED_POINT_TO_POINT_FARE = 'CAPPED_POINT_TO_POINT_FARE',
  CAPPED_ZONAL_FARE = 'CAPPED_ZONAL_FARE',
  LINE_FLAT_FARE = 'LINE_FLAT_FARE',
  NETWORK_FLAT_FARE = 'NETWORK_FLAT_FARE',
  POINT_TO_POINT_FARE = 'POINT_TO_POINT_FARE',
  POINT_TO_POINT_DISTANCE_FARE = 'POINT_TO_POINT_DISTANCE_FARE',
  STAGE_FARE = 'STAGE_FARE',
  ZONE_FLAT_FARE = 'ZONE_FLAT_FARE',
  ZONE_SEQUENCE_FARE = 'ZONE_SEQUENCE_FARE',
  ZONE_TO_ZONE_FARE = 'ZONE_TO_ZONE_FARE',
  ZONE_COUNT_FARE = 'ZONE_COUNT_FARE',
  PENALTY_FARE = 'PENALTY_FARE',
  OTHER = 'OTHER'
}

export enum GpaComparisonOperatorVariant {
  A = 'A',
  E = 'E'
}

export enum ValiditionRequirementEnum {
  IDENTIFIABLE_CUSTOMER = 'IDENTIFIABLE_CUSTOMER',
  VERIFIED_DELAY_OR_CANCELLATION = 'VERIFIED_DELAY_OR_CANCELLATION',
  ASSESSMENT_DOCUMENTATION = 'ASSESSMENT_DOCUMENTATION',
  ORIGINAL_TICKET_REQUIRED = 'ORIGINAL_TICKET_REQUIRED'
}

export enum VatGroupRegister {
  EXCEPTION_FROM_VAT = 'EXCEPTION_FROM_VAT',
  GENERAL_VAT = 'GENERAL_VAT',
  FOOD_VAT = 'FOOD_VAT',
  TRANSPORT_AND_TICKETS_VAT = 'TRANSPORT_AND_TICKETS_VAT'
}

export enum PriceType {
  PERCENT = 'percent',
  FIXED = 'fixed'
}

export enum VatRegisterGroup {
  EXCEPTION_FROM_VAT = 'EXCEPTION_FROM_VAT',
  GENERAL_VAT = 'GENERAL_VAT',
  FOOD_VAT = 'FOOD_VAT',
  TRANSPORT_AND_TICKETS_VAT = 'TRANSPORT_AND_TICKETS_VAT'
}

export enum TicketingType {
  ALL_ON_ONE_TICKET = 'ALL_ON_ONE_TICKET',
  SEPARATE_TICKETS = 'SEPARATE_TICKETS',
  TICKET_WITH_COUPONS = 'TICKET_WITH_COUPONS',
  OTHER = 'OTHER'
}

export enum DiscountBasis {
  NONE = 'NONE',
  FREE = 'FREE',
  DISCOUNT = 'DISCOUNT'
}

export enum PenaltyPaymentMethod {
  CASH_AND_CARD = 'CASH_AND_CARD',
  POSTAL_ORDER = 'POSTAL_ORDER',
  CASH = 'CASH',
  COIN = 'COIN',
  CREDIT_CARD = 'CREDIT_CARD',
  DEBIT_CARD = 'DEBIT_CARD',
  TRAVEL_CARD = 'TRAVEL_CARD',
  CONTACTLESS_TRAVEL_CARD = 'CONTACTLESS_TRAVEL_CARD',
  SMS = 'SMS'
}

export enum DistributionRight {
  NONE = 'NONE',
  SELL = 'SELL',
  REFUND = 'REFUND',
  EXCHANGE = 'EXCHANGE',
  INFORM = 'INFORM',
  PRIVATE = 'PRIVATE',
  OTHER = 'OTHER'
}

export enum PaymentMethod {
  CASH = 'CASH',
  CASH_AND_CARD = 'CASH_AND_CARD',
  COIN = 'COIN',
  BANKNOTE = 'BANKNOTE',
  CREDIT_CARD = 'CREDIT_CARD',
  DEBIT_CARD = 'DEBIT_CARD',
  CONTACTLESS_PAYMENT_CARD = 'CONTACTLESS_PAYMENT_CARD',
  CARDS_ONLY = 'CARDS_ONLY',
  TRAVEL_CARD = 'TRAVEL_CARD',
  CONTACTLESS_TRAVEL_CARD = 'CONTACTLESS_TRAVEL_CARD',
  SMS = 'SMS',
  MOBILE_PHONE = 'MOBILE_PHONE',
  CHEQUE = 'CHEQUE',
  COMPANY_CHEQUE = 'COMPANY_CHEQUE',
  TRAVELLERS_CHEQUE = 'TRAVELLERS_CHEQUE',
  POSTAL_ORDER = 'POSTAL_ORDER',
  VOUCHER = 'VOUCHER',
  TOKEN = 'TOKEN',
  WARRANT = 'WARRANT',
  OTHER = 'OTHER'
}

export enum EntitlementType {
  USE = 'USE',
  PURCHASE = 'PURCHASE',
  PURCHASE_AT_DISCOUNT = 'PURCHASE_AT_DISCOUNT',
  NONE = 'NONE'
}

export enum RefundBasis {
  PER_OFFER = 'PER_OFFER',
  PER_PERSON = 'PER_PERSON'
}

export enum ResellWhen {
  AFTER_PURCHASE = 'AFTER_PURCHASE',
  BEFORE_START_OF_VALIDITY_PERIOD = 'BEFORE_START_OF_VALIDITY_PERIOD',
  AFTER_START_OF_VALIDITY_PERIOD = 'AFTER_START_OF_VALIDITY_PERIOD',
  AFTER_END_OF_VALIDITY_PERIOD = 'AFTER_END_OF_VALIDITY_PERIOD',
  BEFORE_FIRST_USE = 'BEFORE_FIRST_USE',
  AFTER_FIRST_USE = 'AFTER_FIRST_USE',
  BEFORE_VALIDATION = 'BEFORE_VALIDATION',
  AFTER_VALIDATION = 'AFTER_VALIDATION',
  NEVER = 'NEVER'
}

export enum ExchangingAllowed {
  PARTIAL = 'PARTIAL',
  FULL = 'FULL',
  NONE = 'NONE'
}

export enum FareClass {
  FIRST_CLASS = 'FIRST_CLASS',
  SECOND_CLASS = 'SECOND_CLASS',
  THIRD_CLASS = 'THIRD_CLASS',
  ECONOMY_CLASS = 'ECONOMY_CLASS',
  BUSINESS_CLASS = 'BUSINESS_CLASS',
  TURISTA = 'TURISTA',
  PREFERENTE = 'PREFERENTE',
  STANDARD_CLASS = 'STANDARD_CLASS',
  PREMIUM_CLASS = 'PREMIUM_CLASS',
  ANY = 'ANY',
  UNKNOWN = 'UNKNOWN'
}

export enum ExchangeableTo {
  ANY_PRODUCT = 'ANY_PRODUCT',
  SAME_PRODUCT_SAME_DAY = 'SAME_PRODUCT_SAME_DAY',
  SAME_PRODUCT_ANY_DAY = 'SAME_PRODUCT_ANY_DAY',
  UPGRADE_TO_STANDARD_FARE = 'UPGRADE_TO_STANDARD_FARE',
  SPECIFIED_PRODUCTS = 'SPECIFIED_PRODUCTS'
}

export enum RoundingMethod {
  NONE = 'NONE',
  DOWN = 'DOWN',
  UP = 'UP',
  SPLIT = 'SPLIT',
  STEP_TABLE = 'STEP_TABLE',
  FIVE = 'FIVE',
  NINE = 'NINE',
  TEN = 'TEN',
  FORTY_NINE = 'FORTY_NINE'
}

export enum TripType {
  RETURN = 'RETURN',
  RETURN_ONLY = 'RETURN_ONLY',
  SINGLE = 'SINGLE',
  MULTIPLE = 'MULTIPLE'
}

export enum ValidationRequirementEnum {
  IDENTIFIABLE_CUSTOMER = 'IDENTIFIABLE_CUSTOMER',
  VERIFIED_DELAY_OR_CANCELLATION = 'VERIFIED_DELAY_OR_CANCELLATION',
  ASSESSMENT_DOCUMENTATION = 'ASSESSMENT_DOCUMENTATION',
  ORIGINAL_TICKET_REQUIRED = 'ORIGINAL_TICKET_REQUIRED'
}

export enum TransportMode {
  AIR = 'AIR',
  BUS = 'BUS',
  CABLE_WAY = 'CABLE_WAY',
  COACH = 'COACH',
  FUNICULAR = 'FUNICULAR',
  METRO = 'METRO',
  RAIL = 'RAIL',
  TAXI = 'TAXI',
  TRAM = 'TRAM',
  WATER = 'WATER',
  UNKNOWN = 'UNKNOWN'
}

export enum TransportSubmode {
  DOMESTIC_FLIGHT = 'domesticFlight',
  HELICOPTER_SERVICE = 'helicopterService',
  INTERNATIONAL_FLIGHT = 'internationalFlight',
  AIRPORT_LINK_BUS = 'airportLinkBus',
  EXPRESS_BUS = 'expressBus',
  LOCAL_BUS = 'localBus',
  NIGHT_BUS = 'nightBus',
  RAIL_REPLACEMENT_BUS = 'railReplacementBus',
  REGIONAL_BUS = 'regionalBus',
  SCHOOL_BUS = 'schoolBus',
  SHUTTLE_BUS = 'shuttleBus',
  SIGHTSEEING_BUS = 'sightseeingBus',
  TELECABIN = 'telecabin',
  INTERNATIONAL_COACH = 'internationalCoach',
  NATIONAL_COACH = 'nationalCoach',
  TOURIST_COACH = 'touristCoach',
  FUNICULAR = 'funicular',
  METRO = 'metro',
  URBAN_RAILWAY = 'urbanRailway',
  AIRPORT_LINK_RAIL = 'airportLinkRail',
  INTERNATIONAL = 'international',
  INTERREGIONAL_RAIL = 'interregionalRail',
  LOCAL = 'local',
  LONG_DISTANCE = 'longDistance',
  NIGHT_RAIL = 'nightRail',
  REGIONAL_RAIL = 'regionalRail',
  TOURIST_RAILWAY = 'touristRailway',
  CHARTER_TAXI = 'charterTaxi',
  COMMUNAL_TAXI = 'communalTaxi',
  WATER_TAXI = 'waterTaxi',
  CITY_TRAM = 'cityTram',
  LOCAL_TRAM = 'localTram',
  HIGH_SPEED_PASSENGER_SERVICE = 'highSpeedPassengerService',
  HIGH_SPEED_VEHICLE_SERVICE = 'highSpeedVehicleService',
  INTERNATIONAL_CAR_FERRY = 'internationalCarFerry',
  INTERNATIONAL_PASSENGER_FERRY = 'internationalPassengerFerry',
  LOCAL_CAR_FERRY = 'localCarFerry',
  LOCAL_PASSENGER_FERRY = 'localPassengerFerry',
  NATIONAL_CAR_FERRY = 'nationalCarFerry',
  SIGHTSEEING_SERVICE = 'sightseeingService'
}

export enum PlaceUse {
  START_AT = 'START_AT',
  END_AT = 'END_AT',
  VIA = 'VIA'
}

export enum State {
  EXISTING = 'EXISTING',
  NEW = 'NEW',
  EDITED = 'EDITED',
  DELETED = 'DELETED'
}

export enum StepLimitUnit {
  STOPS = 'STOPS',
  STOPS_INCLUDING_PASS_THROUGH_STOPS = 'STOPS_INCLUDING_PASS_THROUGH_STOPS',
  SECTIONS = 'SECTIONS',
  ZONES = 'ZONES',
  NETWORKS = 'NETWORKS',
  OPERATORS = 'OPERATORS',
  COUNTRIES = 'COUNTRIES'
}

export enum SupplementProductType {
  SEAT_RESERVATION = 'SEAT_RESERVATION',
  BICYCLE = 'BICYCLE',
  DOG = 'DOG',
  ANIMAL = 'ANIMAL',
  MEAL = 'MEAL',
  WIFI = 'WIFI',
  EXTRA_LUGGAGE = 'EXTRA_LUGGAGE',
  PENALTY = 'PENALTY',
  UPGRADE = 'UPGRADE',
  JOURNEY_EXTENSION = 'JOURNEY_EXTENSION',
  JOURNEY_ADD_ON = 'JOURNEY_ADD_ON',
  EVENT_ADD_ON = 'EVENT_ADD_ON',
  PARKING = 'PARKING'
}

export enum TariffBasis {
  ROUTE = 'ROUTE',
  DISTANCE = 'DISTANCE',
  GROUP = 'GROUP'
}

export enum UsageValidityType {
  SINGLE_RIDE = 'SINGLE_RIDE',
  SINGLE_TRIP = 'SINGLE_TRIP',
  RETURN_TRIP = 'RETURN_TRIP',
  CARNET = 'CARNET',
  DAY_PASS = 'DAY_PASS',
  WEEKLY_PASS = 'WEEKLY_PASS',
  WEEKEND_PASS = 'WEEKEND_PASS',
  MONTHLY_PASS = 'MONTHLY_PASS',
  SEASON_TICKET = 'SEASON_TICKET',
  PROFILE_MEMBERSHIP = 'PROFILE_MEMBERSHIP',
  OPEN_ENDED = 'OPEN_ENDED',
  OTHER = 'OTHER'
}

export enum UsageTrigger {
  START_OF_PERIOD = 'START_OF_PERIOD',
  START_OUT_BOUND_RIDE = 'START_OUT_BOUND_RIDE',
  END_OUT_BOUND_RIDE = 'END_OUT_BOUND_RIDE',
  START_RETURN_RIDE = 'START_RETURN_RIDE',
  PURCHASE = 'PURCHASE',
  SPECIFIED_START_DATE = 'SPECIFIED_START_DATE',
  FULFILMENT = 'FULFILMENT',
  ACTIVATION = 'ACTIVATION',
  DAY_OFFSET_BEFORE_CALENDAR_PERIOD = 'DAY_OFFSET_BEFORE_CALENDAR_PERIOD'
}

export enum UsageEnd {
  STANDARD_DURATION = 'STANDARD_DURATION',
  END_OF_CALENDAR_PERIOD = 'END_OF_CALENDAR_PERIOD',
  END_OF_RIDE = 'END_OF_RIDE',
  END_OF_TRIP = 'END_OF_TRIP',
  END_OF_FARE_DAY = 'END_OF_FARE_DAY',
  END_OF_FARE_PERIOD = 'END_OF_FARE_PERIOD',
  PRODUCT_EXPIRY = 'PRODUCT_EXPIRY',
  PROFILE_EXPIRY = 'PROFILE_EXPIRY',
  OTHER = 'OTHER'
}

export enum UsageStartConstraintType {
  VARIABLE = 'VARIABLE',
  FIXED = 'FIXED',
  FIXED_WINDOW = 'FIXED_WINDOW'
}

export enum ActivationMeans {
  NONE_REQUIRED = 'NONE_REQUIRED',
  CHECK_IN = 'CHECK_IN',
  USE_OF_VALIDATOR = 'USE_OF_VALIDATOR',
  USE_OF_MOBILE_DEVICE = 'USE_OF_MOBILE_DEVICE',
  AUTOMATIC_BY_TIME = 'AUTOMATIC_BY_TIME',
  AUTOMATIC_BY_PROXIMITY = 'AUTOMATIC_BY_PROXIMITY',
  OTHER = 'OTHER'
}

export enum ProofOfIdentity {
  NONE_REQUIRED = 'NONE_REQUIRED',
  PASSPORT = 'PASSPORT',
  DRIVERS_LICENSE = 'DRIVERS_LICENSE',
  IDENTITY_DOCUMENT = 'IDENTITY_DOCUMENT',
  CREDIT_CARD = 'CREDIT_CARD',
  MEMBERSHIP_CARD = 'MEMBERSHIP_CARD',
  STUDENT_CARD = 'STUDENT_CARD',
  LETTER_WITH_ADDRESS = 'LETTER_WITH_ADDRESS',
  MEDICAL_DOCUMENT = 'MEDICAL_DOCUMENT',
  MEASUREMENT = 'MEASUREMENT',
  OTHER = 'OTHER'
}

export enum UserType {
  ANYONE = 'ANYONE',
  ADULT = 'ADULT',
  YOUTH = 'YOUTH',
  CHILD = 'CHILD',
  INFANT = 'INFANT',
  SENIOR = 'SENIOR',
  STUDENT = 'STUDENT',
  MILITARY = 'MILITARY'
}

export enum VersionType {
  BASELINE = 'BASELINE',
  POINT = 'POINT'
}

export enum LogicalOperator {
  AND = 'AND',
  OR = 'OR',
  XOR = 'XOR',
  NOT = 'NOT'
}

export enum LogicalOperatorWithNone {
  AND = 'AND',
  OR = 'OR',
  XOR = 'XOR',
  NOT = 'NOT',
  NONE = 'NONE'
}

export enum ComparisonOperator {
  EQ = 'EQ',
  NE = 'NE',
  GT = 'GT',
  LT = 'LT',
  GE = 'GE',
  LE = 'LE'
}

export enum ChargingBasisType {
  FREE = 'FREE',
  DISCOUNTED = 'DISCOUNTED',
  NORMAL = 'NORMAL',
  ANY = 'ANY'
}

export enum RequiredType {
  SERVICE_JOURNEY_REF = 'SERVICE_JOURNEY_REF',
  TARIFF_ZONE_REF = 'TARIFF_ZONE_REF',
  PASSENGER_SEAT_REF = 'PASSENGER_SEAT_REF',
  USER_PROFILE_REF = 'USER_PROFILE_REF',
  USAGE_VALIDITY_PERIOD = 'USAGE_VALIDITY_PERIOD',
  DATED_SERVICE_JOURNEY_REF = 'DATED_SERVICE_JOURNEY_REF',
  DISTANCE_MATRIX_ELEMENT_REF = 'DISTANCE_MATRIX_ELEMENT_REF',
  SCHEDULED_STOP_POINT_REF = 'SCHEDULED_STOP_POINT_REF',
  DYNAMIC_DISTANCE_MATRIX_ELEMENT = 'DYNAMIC_DISTANCE_MATRIX_ELEMENT',
  GROUP_TICKET = 'GROUP_TICKET'
}

export enum RequiredInContext {
  OFFERING = 'OFFERING',
  SALE = 'SALE',
  FULFILMENT = 'FULFILMENT',
  ACTIVATION = 'ACTIVATION',
  CONSUMPTION = 'CONSUMPTION',
  REVALIDATION = 'REVALIDATION'
}

export enum SetOperator {
  ONE_OF_ANY_ONE_SET = 'ONE_OF_ANY_ONE_SET',
  ONE_OF_EACH_SET = 'ONE_OF_EACH_SET',
  SOME_OF_ANY_SET = 'SOME_OF_ANY_SET',
  ALL_OF_ONE_SET = 'ALL_OF_ONE_SET',
  ALL_OF_ALL_SETS = 'ALL_OF_ALL_SETS'
}

export enum RequiredElement {
  START_DATE = 'START_DATE',
  START_TIME = 'START_TIME',
  STANDARD_DURATION = 'STANDARD_DURATION',
  START_STOP_POINT_REF = 'START_STOP_POINT_REF',
  END_STOP_POINT_REF = 'END_STOP_POINT_REF',
  START_TARIFF_ZONE_REF = 'START_TARIFF_ZONE_REF',
  END_TARIFF_ZONE_REF = 'END_TARIFF_ZONE_REF'
}

export enum ReservingRequirements {
  RESERVATIONS_COMPULSORY = 'RESERVATIONS_COMPULSORY',
  RESERVATIONS_COMPULSORY_FOR_GROUPS = 'RESERVATIONS_COMPULSORY_FOR_GROUPS',
  RESERVATIONS_COMPULSORY_FOR_FIRST_CLASS = 'RESERVATIONS_COMPULSORY_FOR_FIRST_CLASS',
  RESERVATIONS_COMPULSORY_FROM_ORIGIN_STATION = 'RESERVATIONS_COMPULSORY_FROM_ORIGIN_STATION',
  RESERVATIONS_RECOMMENDED = 'RESERVATIONS_RECOMMENDED',
  RESERVATIONS_POSSIBLE = 'RESERVATIONS_POSSIBLE',
  RESERVATIONS_POSSIBLE_ONLY_IN_FIRST_CLASS = 'RESERVATIONS_POSSIBLE_ONLY_IN_FIRST_CLASS',
  RESERVATIONS_POSSIBLE_ONLY_IN_SECOND_CLASS = 'RESERVATIONS_POSSIBLE_ONLY_IN_SECOND_CLASS',
  RESERVATIONS_POSSIBLE_FOR_CERTAIN_CLASSES = 'RESERVATIONS_POSSIBLE_FOR_CERTAIN_CLASSES',
  GROUP_BOOKING_RESTRICTED = 'GROUP_BOOKING_RESTRICTED',
  NO_GROUPS_ALLOWED = 'NO_GROUPS_ALLOWED',
  NO_RESERVATIONS_POSSIBLE = 'NO_RESERVATIONS_POSSIBLE',
  WHEELCHAIR_ONLY_RESERVATIONS = 'WHEELCHAIR_ONLY_RESERVATIONS',
  BICYCLE_RESERVATIONS_COMPULSORY = 'BICYCLE_RESERVATIONS_COMPULSORY',
  RESERVATION_SUPPLEMENT_CHARGED = 'RESERVATION_SUPPLEMENT_CHARGED'
}

export enum FeeBasis {
  PER_OFFER = 'PER_OFFER',
  PER_PERSON = 'PER_PERSON'
}

export enum ReservationChargeType {
  NONE = 'NONE',
  SINGLE_FEE_FOR_RETURN_TRIP = 'SINGLE_FEE_FOR_RETURN_TRIP',
  FEE_FOR_EACH_DIRECTION = 'FEE_FOR_EACH_DIRECTION',
  FEE_FOR_EACH_LEG = 'FEE_FOR_EACH_LEG'
}

export enum PassengerTypes {
  USER_PROFILE = 'UserProfile',
  GROUP_TICKET = 'GroupTicket'
}

export enum ReplacingAllowed {
  PARTIAL = 'PARTIAL',
  FULL = 'FULL',
  NONE = 'NONE'
}

export enum ResellType {
  PARTIAL = 'PARTIAL',
  FULL = 'FULL',
  NONE = 'NONE'
}

export enum RefundType {
  UNUSED = 'UNUSED',
  DELAY = 'DELAY',
  CANCELLATION = 'CANCELLATION',
  PARTIAL_JOURNEY = 'PARTIAL_JOURNEY',
  OTHER = 'OTHER'
}

export enum PurchaseWhen {
  TIME_OF_TRAVEL_ONLY = 'TIME_OF_TRAVEL_ONLY',
  DAY_OF_TRAVEL_ONLY = 'DAY_OF_TRAVEL_ONLY',
  ADVANCE_ONLY = 'ADVANCE_ONLY',
  UNTIL_PREVIOUS_DAY = 'UNTIL_PREVIOUS_DAY',
  ADVANCE_AND_DAY_OF_TRAVEL = 'ADVANCE_AND_DAY_OF_TRAVEL',
  OTHER = 'OTHER'
}

export enum DaysOfWeekEnum {
  MONDAY = 'MONDAY',
  TUESDAY = 'TUESDAY',
  WEDNESDAY = 'WEDNESDAY',
  THURSDAY = 'THURSDAY',
  FRIDAY = 'FRIDAY',
  SATURDAY = 'SATURDAY',
  SUNDAY = 'SUNDAY',
  WEEKDAYS = 'WEEKDAYS',
  WEEKEND = 'WEEKEND',
  EVERYDAY = 'EVERYDAY'
}

export enum HolidayTypeEnum {
  NATIONAL_HOLIDAY = 'NATIONAL_HOLIDAY',
  NEW_YEARS_DAY = 'NEW_YEARS_DAY',
  PALM_SUNDAY = 'PALM_SUNDAY',
  MAUNDY_THURSDAY = 'MAUNDY_THURSDAY',
  GOOD_FRIDAY = 'GOOD_FRIDAY',
  EASTER_SUNDAY = 'EASTER_SUNDAY',
  EASTER_MONDAY = 'EASTER_MONDAY',
  LABOUR_DAY = 'LABOUR_DAY',
  CONSTITUTION_DAY = 'CONSTITUTION_DAY',
  ASCENSION_DAY = 'ASCENSION_DAY',
  WHIT_SUNDAY = 'WHIT_SUNDAY',
  WHIT_MONDAY = 'WHIT_MONDAY',
  CHRISTMAS_DAY = 'CHRISTMAS_DAY',
  BOXING_DAY = 'BOXING_DAY'
}

export enum InterchangeRestrictionType {
  ALLOW_INTERCHANGE = 'ALLOW_INTERCHANGE',
  ALLOW_ON_REPLACEMENT = 'ALLOW_ON_REPLACEMENT',
  DISALLOW_INTERCHANGING = 'DISALLOW_INTERCHANGING'
}

export enum PenaltyAction {
  FINE = 'FINE',
  PAY_FARE = 'PAY_FARE',
  PAY_FULL_FARE = 'PAY_FULL_FARE',
  PAY_DIFFERENCE = 'PAY_DIFFERENCE',
  PAY_FARE_AND_FINE = 'PAY_FARE_AND_FINE',
  OTHER = 'OTHER'
}

export enum IntervalType {
  STOP = 'STOP',
  TARIFF_ZONE = 'TARIFF_ZONE',
  DISTANCE = 'DISTANCE',
  COUPON = 'COUPON',
  OTHER = 'OTHER'
}

export enum BaggageType {
  HANDBAG = 'HANDBAG',
  HAND_LUGGAGE = 'HAND_LUGGAGE',
  SMALL_SUITCASE = 'SMALL_SUITCASE',
  SUITCASE = 'SUITCASE',
  TRUNK = 'TRUNK',
  OVERSIZE_ITEM = 'OVERSIZE_ITEM',
  BICYCLE = 'BICYCLE',
  SPORTING_EQUIPMENT = 'SPORTING_EQUIPMENT',
  SKIS = 'SKIS',
  MUSICAL_INSTRUMENT = 'MUSICAL_INSTRUMENT',
  PUSH_CHAIR = 'PUSH_CHAIR',
  MOTORIZED_WHEELCHAIR = 'MOTORIZED_WHEELCHAIR',
  LARGE_MOTORIZED_WHEELCHAIR = 'LARGE_MOTORIZED_WHEELCHAIR',
  WHEELCHAIR = 'WHEELCHAIR',
  SMALL_ANIMAL = 'SMALL_ANIMAL',
  ANIMAL = 'ANIMAL',
  GAME = 'GAME',
  MOTORCYCLE = 'MOTORCYCLE',
  OTHER = 'OTHER'
}

export enum BaggageUseType {
  CARRY_ON = 'CARRY_ON',
  CHECK_IN = 'CHECK_IN',
  OVERSIZE_CHECK_IN = 'OVERSIZE_CHECK_IN'
}

export enum LuggageAllowanceType {
  NONE = 'NONE',
  UNLIMITED = 'UNLIMITED',
  SINGLE = 'SINGLE',
  LIMITED = 'LIMITED'
}

export enum LuggageChargingBasis {
  FREE = 'FREE',
  CHARGED_BY_ITEM = 'CHARGED_BY_ITEM',
  CHARGED_BY_WEIGHT = 'CHARGED_BY_WEIGHT',
  OTHER = 'OTHER'
}

export enum GroupDiscountBasis {
  FREE = 'FREE',
  DISCOUNT_FOR_ALL = 'DISCOUNT_FOR_ALL',
  DISCOUNT_FOR_FIRST_MEMBER_OF_GROUP = 'DISCOUNT_FOR_FIRST_MEMBER_OF_GROUP',
  STEP_DISCOUNT = 'STEP_DISCOUNT',
  DISCOUNT_FOR_SECOND_AND_SUBSEQUENT_MEMBERS = 'DISCOUNT_FOR_SECOND_AND_SUBSEQUENT_MEMBERS',
  OTHER = 'OTHER'
}

export enum PerBasis {
  PER_OFFER = 'PER_OFFER',
  PER_PERSON = 'PER_PERSON'
}

export enum GroupCheckInEnum {
  NONE = 'NONE',
  REQUIRED = 'REQUIRED',
  ALLOWED = 'ALLOWED'
}


export enum FulfilmentMethodType {
  TICKET_OFFICE = 'TICKET_OFFICE',
  TICKET_MACHINE = 'TICKET_MACHINE',
  CONDUCTOR = 'CONDUCTOR',
  AGENT = 'AGENT',
  POST = 'POST',
  SELFPRINT = 'SELFPRINT',
  SMS = 'SMS',
  TOP_UP_DEVICE = 'TOP_UP_DEVICE',
  VALIDATOR = 'VALIDATOR',
  MOBILE_APP = 'MOBILE_APP',
  CUSTOMER_ACCOUNT = 'CUSTOMER_ACCOUNT',
  OTHER = 'OTHER'
}


export enum FrequencyOfUseType {
  SINGLE = 'SINGLE',
  UNLIMITED = 'UNLIMITED',
  LIMITED = 'LIMITED',
  TWICE_A_DAY = 'TWICE_A_DAY'
}



export enum TariffBasisFSE {
  FLAT = 'FLAT',
  DISTANCE = 'DISTANCE',
  ZONE_TO_ZONE = 'ZONE_TO_ZONE',
  POINT_TO_POINT = 'POINT_TO_POINT',
  DISCOUNT = 'DISCOUNT',
  OTHER = 'OTHER',
  ZONE = 'ZONE'
}

export enum FactorTypes {
  GEOGRAPHICAL_INTERVAL = 'GEOGRAPHICAL_INTERVAL',
  DISTANCE_MATRIX_ELEMENT = 'DISTANCE_MATRIX_ELEMENT',
  FARE_QUOTA = 'FARE_QUOTA'
}
